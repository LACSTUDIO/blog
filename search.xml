<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HTTP协议概述</title>
      <link href="//p/http/HTTP%E5%8D%8F%E8%AE%AE%E6%A6%82%E8%BF%B0/"/>
      <url>//p/http/HTTP%E5%8D%8F%E8%AE%AE%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<p>WEB API接口 大都是基于 HTTP 协议的，所以，要进行接口测试 首先要了解 HTTP 协议 的 基础知识。</p><h1 id="HTTP协议简介"><a href="#HTTP协议简介" class="headerlink" title="HTTP协议简介"></a>HTTP协议简介</h1><ul><li><p>HTTP 协议 全称是 超文本传输协议， 英文是 Hypertext Transfer Protocol 。</p></li><li><p>HTTP 有好几个版本，包括： <code>0.9</code> 、 <code>1.0</code> 、 <code>1.1</code> 、 <code>2</code> 、 <code>3</code> ，当前最广泛使用的是 <code>HTTP/1.1</code> 版本。</p></li><li><p>HTTP 协议最大的特点是 通讯双方 分为 <code>客户端</code> 和 <code>服务端</code> 。</p></li><li><p>HTTP 双方的信息交互，必须是这样一种方式：</p><p>  特别注意：HTTP协议中，服务端不能主动先发送信息给 客户端。</p><ul><li><p>客户端 先发送 http请求（request）给 服务端</p></li><li><p>然后服务端 发送 http响应（response）给 客户端</p></li></ul></li></ul><blockquote><p>而且在1.1 以前的版本， 服务端 返回响应给客户端后，连接就会 断开 ，下一次双方要进行信息交流，必须重复上面的过程，重新建立连接，客户端发送请求，服务返回响应。</p></blockquote><blockquote><p>到了 1.1 版本， 建立连接后，这个连接可以保持一段时间（keep alive）， 这段时间，双方可以多次进行 请求和响应， 无需重新建立连接。</p></blockquote><hr><h1 id="HTTP请求消息"><a href="#HTTP请求消息" class="headerlink" title="HTTP请求消息"></a>HTTP请求消息</h1><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">http://192.168.56.101:8080/suthr/logon?username=hrteacher&amp;password=12345</span>  <span class="string">HTTP/1.1</span></span><br><span class="line"><span class="string">User-Agent:</span> &quot;<span class="keyword">P</span>ostman<span class="keyword">R</span>untime/7.43.0&quot;</span><br><span class="line">Accept:&quot;*/*</span><br><span class="line">Cache-Control:&quot;no-cache&#x27;</span><br><span class="line"><span class="attribute">Postman-Token</span><span class="punctuation">: </span>&quot;0e9a9ecc-2701-4c93-9f5b-c302765bd409&quot;</span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>&quot;192.168.56.101:8080&#x27;</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>&quot;gzip, deflate, br&quot;</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>&quot;keep-alive&quot;</span><br></pre></td></tr></table></figure><p>http请求消息由下面几个部分组成</p><h2 id="请求行-request-line"><a href="#请求行-request-line" class="headerlink" title="请求行 request line"></a>请求行 request line</h2><ul><li><p>http请求的第一行的内容，表示要操作什么资源，使用的 http协议版本是什么。</p><p>  里面包含了3部分信息： 请求的方法，操作资源的地址， 协议的版本号</p><p>  例如</p>  <figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">http://192.168.56.101:8080/suthr/logon</span> <span class="meta">HTTP/1.1</span></span><br></pre></td></tr></table></figure><p>  Get是请求方法，表示要 <code>获取</code> 资源；资源的 <code>地址</code> 是 <code>/mgr/login.html</code> ； 使用的 <code>协议</code> 是 <code>HTTP/1.1</code></p><p>  <a href="HTTP%E5%8D%8F%E8%AE%AE%E6%A6%82%E8%BF%B0+69c40bda-b3b3-4e8e-bb13-935987e4c0bc/%E5%B8%B8%E8%A7%81%E7%9A%84HTTP+%E8%AF%B7%E6%B1%82%E6%96%B9%E6%B3%95+74e2e110-5961-41b1-a8b4-a33845eaa0d8.md">常见的HTTP 请求方法</a></p></li><li><p>请求行里面还包括了url，比如</p>  <figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/suthr/logon?username=hrteacher&amp;password=123456</span><br></pre></td></tr></table></figure><p>  url表示要获取资源的具体路径</p><p>  url特别要注意的是 <code>url参数</code> ，英文叫 <code>url query String</code></p><p>  什么是url参数？</p><p>  比如：</p>  <figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://192.168.56.101:8080/suthr/logon?username=hrteacher&amp;password=123456</span><br></pre></td></tr></table></figure><p>  问号后面的部分 <code>username=hrteacher&amp;password=123456</code> 就是 url 参数，</p><p>  每个参数之间是用 <code>&amp;</code> 隔开的。</p></li></ul><h2 id="请求头-request-headers"><a href="#请求头-request-headers" class="headerlink" title="请求头 request headers"></a>请求头 request headers</h2><ul><li><p>请求头是http请求行下面的的内容，里面存放一些 信息。</p><p>  比如，请求发送的服务端域名是什么， 希望接收的响应消息使用什么语言，请求消息体的长度等等。</p><p>  通常请求头 都有好多个，一个请求头 占据一行</p><p>  单个请求头的 格式是： <code>key（键）: value（值）</code></p></li></ul><h2 id="消息体-message-body"><a href="#消息体-message-body" class="headerlink" title="消息体 message body"></a>消息体 message body</h2><ul><li><p>请求的url、请求头中可以存放一些数据信息， 但是有些数据信息，往往需要存放在消息体中。</p><p>  特别是 POST、PUT等请求，添加、修改的数据信息 通常都是 存放在 请求消息体 中的。</p><p>  如果 HTTP 请求 有 消息体， 协议规定 需要在 消息头和消息体之间 插入一个空行， 隔开 它们。</p><p>  请求消息体中保存了要提交给服务端的数据信息。</p><p>  比如：客户端要上传一个文件给服务端，就可以通过HTTP请求发送文件数据给服务端。</p><p>  文件的数据 就应该在请求的消息体中。</p><p>  再比如：上面示例中 客户端要添加药品，药品的名称、编码、描述，就存放在请求消息体中。</p><p>  WEB API 请求消息体 通常是某种格式的文本，常见的有</p><ul><li><p>Json</p></li><li><p>Xml</p></li><li><p>www-form-urlencoded</p></li></ul></li></ul><h1 id="HTTP响应消息"><a href="#HTTP响应消息" class="headerlink" title="HTTP响应消息"></a>HTTP响应消息</h1><p>下面是1个http响应消息的示例</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">HTTP/1.1</span> <span class="number">200</span> OK</span><br><span class="line">Date:&quot;Sun, 09 Feb 2025 07:39:10 GMT&quot;</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>37</span><br><span class="line"><span class="attribute">X-Frame-Options</span><span class="punctuation">: </span>SAMEORIGIN</span><br><span class="line"><span class="attribute">Vary</span><span class="punctuation">: </span>Cookie</span><br><span class="line">Content-Type:: &quot;text/plain;charset=IS0-8859-1&quot;</span><br><span class="line">Keep-Alive:&quot;timeout=20&quot;</span><br><span class="line">Connection:&quot;keep-alive&quot;</span><br><span class="line">&#123;&quot;ret&quot;: 0, &quot;retlist&quot;: [], &quot;total&quot;: 0&#125;</span><br></pre></td></tr></table></figure><p>HTTP响应消息包含如下几个部分</p><h3 id="状态行（Status-Line）"><a href="#状态行（Status-Line）" class="headerlink" title="状态行（Status Line）"></a>状态行（Status Line）</h3><p>状态行位于首行，涵盖三个部分：</p><ul><li>协议版本</li></ul><p>在上述示例中，即为 <code>HTTP/1.1</code></p><ul><li>状态码</li></ul><p>在上述示例中，即为 <code>200</code>，请求成功</p><p><a href="HTTP%E5%8D%8F%E8%AE%AE%E6%A6%82%E8%BF%B0+69c40bda-b3b3-4e8e-bb13-935987e4c0bc/%E5%B8%B8%E8%A7%81%E7%8A%B6%E6%80%81%E7%A0%81+cf487115-001d-4467-8056-4ce840b09f84.md">常见状态码</a></p><ul><li>描述状态的短语</li></ul><p>在上述示例中，即为 <code>OK</code>，表示请求成功</p><ul><li><p>以下是一些常见的 HTTP 状态行中描述状态的短语：</p><ol><li><p><code>Not Found</code> ：表示请求的资源未找到。</p></li><li><p><code>Bad Request</code> ：表明客户端发送的请求存在语法错误。</p></li><li><p><code>Internal Server Error</code> ：服务器内部发生错误。</p></li><li><p><code>Unauthorized</code> ：未经授权，需要用户进行身份验证。</p></li><li><p><code>Forbidden</code> ：表示客户端被禁止访问请求的资源。</p></li><li><p><code>Conflict</code> ：表示请求发生冲突。</p></li><li><p><code>Not Modified</code> ：资源未被修改，客户端可使用缓存版本。</p></li><li><p><code>Method Not Allowed</code> ：请求方法不被允许。</p></li><li><p><code>Service Unavailable</code> ：服务不可用，通常是服务器暂时过载或维护。</p></li><li><p><code>Gateway Timeout</code> ：网关超时。</p></li></ol></li></ul><h2 id="响应头（Response-Headers）"><a href="#响应头（Response-Headers）" class="headerlink" title="响应头（Response Headers）"></a>响应头（Response Headers）</h2><p>响应头处于响应状态行下方的内容区域，存储了部分信息。其作用与格式和请求头类似。</p><h2 id="消息体（Message-Body）"><a href="#消息体（Message-Body）" class="headerlink" title="消息体（Message Body）"></a>消息体（Message Body）</h2><p>有时，HTTP 响应需要包含消息体。</p><p>同样，若 HTTP 响应具有消息体，依据协议规定，需在消息头与消息体之间插入一个空行，以将二者分隔开。</p><p>与请求消息体相同，WEB API 响应消息体通常也是某种格式的文本，常见的有：</p><ul><li><p>Json</p></li><li><p>Xml</p></li><li><p>www-form-urlencoded</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络交互 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTTP协议 </tag>
            
            <tag> 网络交互 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ADB-fastboot基础指令</title>
      <link href="//p/%E5%88%B7%E6%9C%BA/adb_fastboot/"/>
      <url>//p/%E5%88%B7%E6%9C%BA/adb_fastboot/</url>
      
        <content type="html"><![CDATA[<h1 id="ADB（Android-Debug-Bridge）相关"><a href="#ADB（Android-Debug-Bridge）相关" class="headerlink" title="ADB（Android Debug Bridge）相关"></a>ADB（Android Debug Bridge）相关</h1><h2 id="1-ADB简介"><a href="#1-ADB简介" class="headerlink" title="1.ADB简介"></a>1.ADB简介</h2><p><code>adb</code>（Android Debug Bridge 直译为<strong>安卓调试桥</strong>）是一个功能强大的命令行工具，主要用于与Android设备进行交互。它可以在多种情况下使用，但是否可以用于关机操作取决于设备的系统权限和当前状态。</p><h2 id="2-ADB-使用方法"><a href="#2-ADB-使用方法" class="headerlink" title="2.ADB 使用方法"></a>2.<strong>ADB 使用方法</strong></h2><ol><li><strong>设备连接状态</strong><ul><li><code>adb</code> 需要设备通过 USB 连接或通过网络连接到计算机或其他移到设备。</li><li>设备必须启用“开发者选项”中的“USB 调试”功能。</li><li>如果设备已连接到网络，也可以通过 <code>adb tcpip</code> 命令进行无线调试。</li></ul></li><li><strong>设备状态</strong><ul><li>设备必须处于正常启动状态，即系统已经加载并运行。</li><li>如果设备处于 Recovery 模式或 Fastboot 模式，<code>adb</code> 的功能会受到限制。</li></ul></li></ol><h2 id="3-ADB-常用指令"><a href="#3-ADB-常用指令" class="headerlink" title="3.ADB 常用指令"></a>3.ADB 常用指令</h2><h3 id="1-设备连接与状态"><a href="#1-设备连接与状态" class="headerlink" title="1. 设备连接与状态"></a>1. <strong>设备连接与状态</strong></h3><ul><li><code>adb devices</code>：列出已连接的设备。</li><li><code>adb get-state</code>：获取设备状态（如 <code>device</code>、<code>offline</code>）。</li><li><code>adb connect &lt;IP:端口&gt;</code>：远程连接设备。</li><li><code>adb disconnect &lt;IP:端口&gt;</code>：断开设备连接。</li></ul><h3 id="2-设备操作"><a href="#2-设备操作" class="headerlink" title="2. 设备操作"></a>2. <strong>设备操作</strong></h3><ul><li><code>adb reboot</code>：重启设备至系统。</li><li><code>adb reboot bootloader</code>：重启设备至 Fastboot 模式。</li><li><code>adb reboot recovery</code>：重启设备至 Recovery 模式。</li><li><code>adb reboot edl</code>：重启设备至 EDL 模式（高通）。</li><li><code>adb reboot fastboot</code>: 重启设备至fastbootd模式。</li></ul><h3 id="3-文件传输"><a href="#3-文件传输" class="headerlink" title="3. 文件传输"></a>3. <strong>文件传输</strong></h3><ul><li><code>adb push &lt;电脑文件路径&gt; &lt;设备目录&gt;</code>：将文件从电脑传输到设备。</li><li><code>adb pull &lt;设备文件路径&gt; &lt;电脑目录&gt;</code>：将文件从设备传输到电脑。</li></ul><h3 id="4-应用管理"><a href="#4-应用管理" class="headerlink" title="4. 应用管理"></a>4. <strong>应用管理</strong></h3><ul><li><code>adb install &lt;APK路径&gt;</code>：安装 APK。</li><li><code>adb install -r &lt;APK路径&gt;</code>：覆盖安装 APK。</li><li><code>adb uninstall &lt;包名&gt;</code>：卸载应用。</li><li><code>adb uninstall -k &lt;包名&gt;</code>：卸载应用但保留数据。</li><li><code>adb shell pm list packages</code>：列出所有应用包名。</li><li><code>adb shell pm list packages -3</code>：列出第三方应用包名。</li></ul><h3 id="5-系统信息"><a href="#5-系统信息" class="headerlink" title="5. 系统信息"></a>5. <strong>系统信息</strong></h3><ul><li><code>adb shell getprop</code> ：获取设备的全部信息。</li><li><code>adb shell getprop ro.product.model</code>：获取设备型号。</li><li><code>adb get-serialno</code>：获取设备序列号。</li><li><code>adb shell dumpsys meminfo &lt;包名&gt;</code>：查看应用内存使用情况。</li><li><code>adb shell cat /proc/cpuinfo</code>：获取 CPU 信息。</li></ul><h3 id="6-其他"><a href="#6-其他" class="headerlink" title="6. 其他"></a>6. <strong>其他</strong></h3><ul><li><code>adb logcat</code>：查看设备日志。</li><li><code>adb shell</code>：进入设备 Shell。</li><li><code>adb root</code>：以 root 权限运行。</li><li><code>adb remount</code>：重新挂载文件系统。</li></ul><hr><h1 id="Fastboot-相关"><a href="#Fastboot-相关" class="headerlink" title="Fastboot 相关"></a>Fastboot 相关</h1><h2 id="1-FASTBOOT简介"><a href="#1-FASTBOOT简介" class="headerlink" title="1.FASTBOOT简介"></a>1.FASTBOOT简介</h2><p>Fastboot 是一个功能强大的工具，主要用于 Android 设备的低级别操作，如刷机、解锁 Bootloader、分区管理等。它通过命令行与设备的 Bootloader 交互，广泛应用于系统更新、故障排除和自定义 ROM 安装。</p><h2 id="2-FASTBOOT使用方法"><a href="#2-FASTBOOT使用方法" class="headerlink" title="2.FASTBOOT使用方法"></a>2.FASTBOOT使用方法</h2><ul><li><p><strong>通过命令</strong>：使用 <code>adb reboot bootloader</code>。</p></li><li><p><strong>通过按键</strong>：根据设备型号，通常按住音量减键（Vol-）+ 电源键开机。</p><p>​            小米设备为音量-和电源。</p></li></ul><h2 id="3-FASTBOOT常用指令"><a href="#3-FASTBOOT常用指令" class="headerlink" title="3.FASTBOOT常用指令"></a>3.FASTBOOT常用指令</h2><h3 id="1-设备连接与状态-1"><a href="#1-设备连接与状态-1" class="headerlink" title="1. 设备连接与状态"></a>1. <strong>设备连接与状态</strong></h3><ul><li><code>fastboot devices</code>：列出已连接的 Fastboot 设备。</li><li><code>fastboot getvar all</code>：获取设备详细信息。</li></ul><h3 id="2-设备操作-1"><a href="#2-设备操作-1" class="headerlink" title="2. 设备操作"></a>2. <strong>设备操作</strong></h3><ul><li><code>fastboot reboot</code>：重启设备。</li><li><code>fastboot reboot-bootloader</code>：重启到 Bootloader 模式。</li></ul><h3 id="3-分区操作"><a href="#3-分区操作" class="headerlink" title="3. 分区操作"></a>3. <strong>分区操作</strong></h3><ul><li><code>fastboot flash &lt;分区名&gt; &lt;文件路径&gt;</code>：烧录&#x2F;刷入分区（如 <code>boot</code>、<code>system</code>、<code>recovery</code>）。</li><li><code>fastboot erase &lt;分区名&gt;</code>：擦除分区。</li><li><code>fastboot format &lt;分区名&gt;</code>：格式化分区。</li></ul><h3 id="4-解锁与安全（不要乱用，每个品牌都有不同的方式）"><a href="#4-解锁与安全（不要乱用，每个品牌都有不同的方式）" class="headerlink" title="4. 解锁与安全（不要乱用，每个品牌都有不同的方式）"></a>4. <strong>解锁与安全（不要乱用，每个品牌都有不同的方式）</strong></h3><ul><li><code>fastboot flashing unlock</code> 或 <code>fastboot oem unlock</code>：解锁 Bootloader。</li><li><code>fastboot flashing lock</code> 或 <code>fastboot oem lock</code>：锁定 Bootloader。</li></ul><h1 id="如何在-Windows、macOS-、Linux-系统中使用-ADB-和-Fastboot指令"><a href="#如何在-Windows、macOS-、Linux-系统中使用-ADB-和-Fastboot指令" class="headerlink" title="如何在 Windows、macOS 、Linux 系统中使用 ADB 和 Fastboot指令"></a>如何在 Windows、macOS 、Linux 系统中使用 ADB 和 Fastboot指令</h1><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a><strong>注意事项</strong></h2><ol><li><strong>设备兼容性</strong>：不同设备可能需要特定的 USB 驱动程序或配置。</li><li><strong>备份数据</strong>：在进行刷机或解锁操作前，建议备份设备数据。</li><li><strong>权限问题</strong>：在 Linux 和 macOS 上，可能需要使用 <code>sudo</code> 来运行某些命令。</li></ol><h2 id="1-Windows-系统"><a href="#1-Windows-系统" class="headerlink" title="1. Windows 系统"></a><strong>1. Windows 系统</strong></h2><h3 id="1-1-安装-ADB-和-Fastboot"><a href="#1-1-安装-ADB-和-Fastboot" class="headerlink" title="1.1 安装 ADB 和 Fastboot"></a><strong>1.1 安装 ADB 和 Fastboot</strong></h3><ol><li><strong>下载平台工具</strong>：<ul><li>访问 <a href="https://developer.android.google.cn/tools/releases/platform-tools?hl=zh-cn">Android SDK Platform-Tools</a> 页面，下载最新版本的 <code>platform-tools.zip</code>。</li><li>或点击<a href="https://pan.quark.cn/s/e8b98954568a%EF%BC%8C%E5%BF%AB%E9%80%9F%E4%B8%8B%E8%BD%BD%E3%80%82">https://pan.quark.cn/s/e8b98954568a，快速下载。</a></li><li>解压下载的文件到一个方便访问的目录，例如 <code>C:\adb</code>。</li></ul></li><li><strong>安装驱动程序</strong>：<ul><li>对于某些设备，可能需要安装额外的 USB 驱动程序。可以从设备制造商的官方网站下载。</li></ul></li><li><strong>配置环境变量（可选）</strong>：<ul><li>将 ADB 和 Fastboot 的路径（例如 <code>C:\adb</code>）添加到系统的环境变量中，这样可以在任何位置运行命令。</li></ul></li></ol><h3 id="1-2-使用-ADB-和-Fastboot"><a href="#1-2-使用-ADB-和-Fastboot" class="headerlink" title="1.2 使用 ADB 和 Fastboot"></a><strong>1.2 使用 ADB 和 Fastboot</strong></h3><ol><li><p><strong>打开命令提示符或 PowerShell</strong>：</p><ul><li>在文件夹中按 <code>Shift + 右键</code>，选择“在此处打开 PowerShell 窗口”。</li><li>如果未添加环境变量，需要在命令前加上路径，例如 <code>.\adb devices</code>。</li></ul></li></ol><hr><h2 id="2-macOS-系统"><a href="#2-macOS-系统" class="headerlink" title="2. macOS 系统"></a><strong>2. macOS 系统</strong></h2><h3 id="2-1-安装-ADB-和-Fastboot"><a href="#2-1-安装-ADB-和-Fastboot" class="headerlink" title="2.1 安装 ADB 和 Fastboot"></a><strong>2.1 安装 ADB 和 Fastboot</strong></h3><ol><li><p><strong>使用 Homebrew 安装</strong>：</p><ul><li><p>安装 Homebrew（如果尚未安装）。</p></li><li><p>在终端中运行以下命令安装 ADB 和 Fastboot：</p><p>bash复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install --cask android-platform-tools</span><br></pre></td></tr></table></figure></li><li><p>安装完成后，ADB 和 Fastboot 工具将位于 <code>/usr/local/bin</code>。</p></li></ul></li><li><p><strong>验证安装</strong>：</p><ul><li>检查 ADB 版本：<code>adb version</code>。</li><li>检查 Fastboot 版本：<code>fastboot version</code>。</li></ul></li></ol><h3 id="2-2-使用-ADB-和-Fastboot"><a href="#2-2-使用-ADB-和-Fastboot" class="headerlink" title="2.2 使用 ADB 和 Fastboot"></a><strong>2.2 使用 ADB 和 Fastboot</strong></h3><ol><li><p><strong>检查设备连接</strong>：</p><ul><li><p>启用设备的 USB 调试模式，然后运行 <code>adb devices</code>。</p></li><li><p>进入 Fastboot 模式：<code>adb reboot bootloader</code>。</p></li><li><p>在 Fastboot 模式下检查设备：<code>fastboot devices</code>。</p></li></ul></li></ol><hr><h2 id="3-Linux-系统"><a href="#3-Linux-系统" class="headerlink" title="3. Linux 系统"></a><strong>3. Linux 系统</strong></h2><h3 id="3-1-安装-ADB-和-Fastboot"><a href="#3-1-安装-ADB-和-Fastboot" class="headerlink" title="3.1 安装 ADB 和 Fastboot"></a><strong>3.1 安装 ADB 和 Fastboot</strong></h3><ol><li><p><strong>下载平台工具</strong>：</p><ul><li>访问 <a href="https://developer.android.com/studio/releases/platform-tools">Android SDK Platform-Tools</a> 页面，下载最新版本的 <code>platform-tools.zip</code>。</li><li>解压文件到一个目录，例如 <code>~/Android/Sdk/platform-tools</code>。</li></ul></li><li><p><strong>配置 udev 规则（可选）</strong>：</p><ul><li><p>创建或编辑 <code>/etc/udev/rules.d/70-android.rules</code> 文件，添加设备的 USB 规则：</p><p>bash复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SUBSYSTEM==<span class="string">&quot;usb&quot;</span>, ATTR&#123;idVendor&#125;==<span class="string">&quot;0e8d&quot;</span>, MODE=<span class="string">&quot;0666&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>重新加载 udev 规则：<code>sudo udevadm control --reload-rules</code>。</p></li></ul></li></ol><h3 id="3-2-使用-ADB-和-Fastboot"><a href="#3-2-使用-ADB-和-Fastboot" class="headerlink" title="3.2 使用 ADB 和 Fastboot"></a><strong>3.2 使用 ADB 和 Fastboot</strong></h3><ol><li><strong>检查设备连接</strong>：<ul><li>启用设备的 USB 调试模式，然后运行 <code>./adb devices</code>。</li><li>进入 Fastboot 模式：<code>./adb reboot bootloader</code>。</li><li>在 Fastboot 模式下检查设备：<code>./fastboot devices</code>。</li></ul></li><li><strong>刷机操作</strong>：</li></ol>]]></content>
      
      
      <categories>
          
          <category> 刷机教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> adb </tag>
            
            <tag> fastboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JMeter</title>
      <link href="//p/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/jmeter/"/>
      <url>//p/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/jmeter/</url>
      
        <content type="html"><![CDATA[<h1 id="1-JMeter的概述"><a href="#1-JMeter的概述" class="headerlink" title="1.JMeter的概述"></a>1.JMeter的概述</h1><h3 id="JMeter是开源性能测试工具，用于测试软件、Web应用等性能，可模拟多用户并发访问，分析系统负载等。"><a href="#JMeter是开源性能测试工具，用于测试软件、Web应用等性能，可模拟多用户并发访问，分析系统负载等。" class="headerlink" title="JMeter是开源性能测试工具，用于测试软件、Web应用等性能，可模拟多用户并发访问，分析系统负载等。"></a>JMeter是开源性能测试工具，用于测试软件、Web应用等性能，可模拟多用户并发访问，分析系统负载等。</h3><h1 id="2-JMeter的使用"><a href="#2-JMeter的使用" class="headerlink" title="2.JMeter的使用"></a>2.JMeter的使用</h1><ol><li>请求<a href="http://192.168.56.101:8080/suthr/authenticate">http://192.168.56.101:8080/suthr/authenticate</a></li><li>请求默认值</li><li>数据断言</li><li>信息头</li><li>数据驱动</li></ol>]]></content>
      
      
      <categories>
          
          <category> 软件测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>LoadRunner</title>
      <link href="//p/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/loadrunner/"/>
      <url>//p/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/loadrunner/</url>
      
        <content type="html"><![CDATA[<h1 id="1-LoadRunner的概述"><a href="#1-LoadRunner的概述" class="headerlink" title="1. LoadRunner的概述"></a>1. LoadRunner的概述</h1><h2 id="LoadRunner是什么"><a href="#LoadRunner是什么" class="headerlink" title="LoadRunner是什么"></a>LoadRunner是什么</h2><ul><li>LoadRunner是一款性能测试工具，主要用于评估系统在高负载条件下的性能表现。</li><li>它通过模拟大量虚拟用户并发访问系统，帮助测试人员发现并优化性能瓶颈，确保系统的稳定性和可靠性。</li></ul><h2 id="LoadRunner的构成"><a href="#LoadRunner的构成" class="headerlink" title="LoadRunner的构成"></a>LoadRunner的构成</h2><ul><li>LoadRunner由三个主要组件构成：<ul><li><em><strong>Virtual User Generator (VUG)</strong></em>：用于录制和编辑测试脚本。</li><li><em><strong>Controller</strong></em>：用于设计测试场景、管理虚拟用户和监控测试过程。</li><li><em><strong>Analysis</strong></em>：用于分析测试结果并生成报告。</li></ul></li><li>这些组件协同工作，使LoadRunner能够全面覆盖从脚本创建到结果分析的整个性能测试流程。</li></ul><h1 id="2-LoadRunner的使用"><a href="#2-LoadRunner的使用" class="headerlink" title="2.LoadRunner的使用"></a>2.LoadRunner的使用</h1><h3 id="录制回放"><a href="#录制回放" class="headerlink" title="录制回放"></a><strong>录制回放</strong></h3><p>录制用户操作，生成测试脚本。</p><h3 id="思考时间"><a href="#思考时间" class="headerlink" title="思考时间"></a><strong>思考时间</strong></h3><p>使用<code>lr_think_time(7);</code>函数模拟用户操作之间的思考时间。</p><p><img src="D:\kaifa\blog\content\post\LoadRunner\PixPin_2025-01-17_21-33-36.png" alt="PixPin_2025-01-17_21-33-36"></p><h3 id="检查点"><a href="#检查点" class="headerlink" title="检查点"></a><strong>检查点</strong></h3><ul><li><p>检查点帮助确保应用程序在性能测试过程中不仅能够响应请求，而且响应的内容也是正确的。</p></li><li><p>使用<code>web_reg_find(&quot;Text=个人中心&quot;, LAST);</code>验证应用程序在特定操作后的响应是否符合预期。</p><p><img src="D:\kaifa\blog\content\post\LoadRunner\image-20250117213450100.png" alt="image-20250117213450100"></p></li></ul><h3 id="关联"><a href="#关联" class="headerlink" title="关联"></a><strong>关联</strong></h3><ul><li><p>使用<code>web_reg_save_param_ex</code>函数动态获取并使用服务器响应中的数据，以替换录制时的静态数据。</p></li><li><p>这些动态数据通常包括会话标识符（如<code>JSESSIONID</code>）、令牌（如<code>CSRF Token</code>）、时间戳、用户生成的数据等。</p><p><img src="D:\kaifa\blog\content\post\LoadRunner\PixPin_2025-01-17_21-35-52.png" alt="PixPin_2025-01-17_21-35-52"></p></li></ul><h3 id="参数化"><a href="#参数化" class="headerlink" title="参数化"></a><strong>参数化</strong></h3><ul><li><p>在脚本中使用变量来替换静态数据，使脚本能够模拟多个用户使用不同的数据进行操作，从而更真实地反映系统的性能表现。</p></li><li><p>规则<img src="D:\kaifa\blog\content\post\LoadRunner\PixPin_2025-01-16_23-22-26.png" alt="PixPin_2025-01-16_23-22-26"></p></li><li><p>迭代规则</p><p><img src="D:\kaifa\blog\content\post\LoadRunner\PixPin_2025-01-16_23-21-24.png" alt="PixPin_2025-01-16_23-21-24"></p></li><li><p>当数值超过时</p><p><img src="D:\kaifa\blog\content\post\LoadRunner\PixPin_2025-01-16_23-23-37.png" alt="PixPin_2025-01-16_23-23-37"></p></li></ul><h3 id="事务与集合点"><a href="#事务与集合点" class="headerlink" title="事务与集合点"></a><strong>事务与集合点</strong></h3><ul><li><strong>事务</strong>：测量特定操作的性能，如登录、提交表单等。通过在脚本中插入事务开始和结束的标记，可以记录这些操作的响应时间。</li><li><strong>集合点</strong>：模拟多个用户同时执行某个操作，以测试系统的并发处理能力。</li></ul><h3 id="场景设计与运行"><a href="#场景设计与运行" class="headerlink" title="场景设计与运行"></a><strong>场景设计与运行</strong></h3><ul><li><p>在Controller中设置虚拟用户（VUsers）的数量、启动和停止策略、运行时的监控等，以模拟真实的用户负载。</p></li><li><p>设计方案</p><p><img src="D:\kaifa\blog\content\post\LoadRunner\PixPin_2025-01-16_20-23-23.png" alt="PixPin_2025-01-16_20-23-23"></p><ul><li><p>初始化：每2秒启动一个用户，共10个用户。</p><p><img src="D:\kaifa\blog\content\post\LoadRunner\PixPin_2025-01-16_20-20-52.png" alt="PixPin_2025-01-16_20-20-52"></p></li><li><p>持续运行2分钟。</p></li><li><p>新增5个用户，直接启动。</p></li><li><p>持续运行2分钟。</p></li><li><p>停止5个用户，立即。</p></li><li><p>持续运行2分钟。</p></li><li><p>停止所有用户，每隔2秒停止1个用户。</p></li></ul><h4 id="运行时"><a href="#运行时" class="headerlink" title="运行时"></a>运行时</h4><ul><li><p>监控测试过程中的系统性能。</p><p><img src="D:\kaifa\blog\content\post\LoadRunner\PixPin_2025-01-16_20-39-36.png" alt="PixPin_2025-01-16_20-39-36"></p><p><img src="D:\kaifa\blog\content\post\LoadRunner\PixPin_2025-01-16_20-30-15.png" alt="PixPin_2025-01-16_20-30-15"></p></li></ul></li></ul><h3 id="结果分析"><a href="#结果分析" class="headerlink" title="结果分析"></a><strong>结果分析</strong></h3><p>在测试完成后，通过分析生成的报告和图表，评估系统的性能表现，找出性能瓶颈和问题。</p><h4 id="Analysis打开后有一半黑屏该怎么办？"><a href="#Analysis打开后有一半黑屏该怎么办？" class="headerlink" title="Analysis打开后有一半黑屏该怎么办？"></a>Analysis打开后有一半<strong>黑屏</strong>该怎么办？</h4><p><img src="D:\kaifa\blog\content\post\LoadRunner\黑屏.jpg" alt="黑屏"></p><ol><li><p>调整分辨率和缩放比例</p><p>系统设置&gt;系统&gt;屏幕-缩放比例</p><p><img src="D:\kaifa\blog\content\post\LoadRunner\PixPin_2025-01-17_21-07-41.png" alt="PixPin_2025-01-17_21-07-41"></p></li><li><p>以兼容模式运行这个程序</p><p>AnalysisUI.exe属性&gt;兼容性&gt;以兼容模式运行这个程序</p><img src="D:\kaifa\blog\content\post\LoadRunner\PixPin_2025-01-17_20-55-20.png" alt="PixPin_2025-01-17_20-55-20" style="zoom: 25%;" /></li></ol><h4 id="AnalysisUI的使用"><a href="#AnalysisUI的使用" class="headerlink" title="AnalysisUI的使用"></a>AnalysisUI的使用</h4><ul><li><p>总结报告页面</p><p><img src="D:\kaifa\blog\content\post\LoadRunner\结果分析-01.png" alt="结果分析-01"></p></li><li><p>其他主要页面</p><ol><li>Running Vusers运行用户</li><li>Hits per Second每秒命中率</li><li>Throughput吞吐量</li><li>Transaction Summary事物概要</li><li>Average Transaction Response Time事物的平均响应时间</li></ol></li><li><p>添加新的图表页面</p><p><img src="D:\kaifa\blog\content\post\LoadRunner\PixPin_2025-01-17_21-18-28.png" alt="PixPin_2025-01-17_21-18-28"></p><img src="D:\kaifa\blog\content\post\LoadRunner\PixPin_2025-01-17_21-20-19.png" alt="PixPin_2025-01-17_21-20-19" style="zoom:50%;" /></li><li><p>图表合并</p><img src="D:\kaifa\blog\content\post\LoadRunner\PixPin_2025-01-17_21-24-21.png" alt="PixPin_2025-01-17_21-24-21" style="zoom:50%;" /><img src="D:\kaifa\blog\content\post\LoadRunner\PixPin_2025-01-17_21-24-00.png" alt="PixPin_2025-01-17_21-24-00" style="zoom:50%;" /></li><li><p>生成新的报告</p><p><img src="D:\kaifa\blog\content\post\LoadRunner\PixPin_2025-01-17_21-25-09.png" alt="PixPin_2025-01-17_21-25-09"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>小米澎湃OS绕答题解bl锁教程</title>
      <link href="//p/hyperos_unlocktool/"/>
      <url>//p/hyperos_unlocktool/</url>
      
        <content type="html"><![CDATA[<iframe class="bilibili" src="//player.bilibili.com/player.html?isOutside=true&aid=112895966841529&bvid=BV1TuiLezEYK&cid=500001636627370&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><ul><li>2025-01-12 12:00 <strong>V1.5</strong>  更新日志:<ol><li>更改整体编码为GB18030,更改bat代码逻辑，更改log和配置文件的读写</li><li></li></ol></li><li>2024-11-09 22:00 <strong>V1.5Beta</strong> 更新日志:<ol><li>重构使用逻辑，重构整体框架，采用重要功能单独脚本的整体框架结构</li><li>进软件后智能检测机型系统版本等信息，然后做出判断是否可以通过绕答题方式解锁手机</li><li>新增：退出脚本同时结束adb进程、7-zip解压内置重要资源</li></ol></li><li>2024-08-19 12:00 <strong>v1.4</strong> 更新日志：<ol><li>新增：设备管理器、usb3.0补丁、退出功能、初始化工具：自动检测驱动和手机信息</li><li>优化：界面显示效果、全盘搜索文件和移动文件逻辑</li><li>更改：精简部分代码、以管理员身份运行工具箱</li></ol></li><li>2024-08-09 19:00 <strong>v1.3</strong> 更新日志：<ol><li>新增：eveythingx86.exe、es输出日志</li><li>优化：全盘搜索文件整体逻辑、界面显示效果 </li><li>更改：修复使用重启到fastboot会重启到fastbootd的问题 、取消对解锁工具屏蔽更新（屏蔽容易报错）</li></ol></li><li>2024-08-03 12:00 <strong>v1.2</strong> 更新日志：<ol><li>新增：工具提示和公告、安装设置前先检测设备是否连接、下载设置完成后工具全盘搜索设置文件然后移动到工具目录进行安装</li><li>优化：界面显示效果、子界面返回逻辑、输入选项错误逻辑、安装设置的整体逻辑</li><li>更改：取消下载直链——下载设置的方式更改为跳转浏览器自行下载</li></ol></li><li>2024-07-13 10:00 <strong>v1.1</strong> 更新日志：<ol><li>新增：更新日志功能、关于功能、屏蔽解锁工具更新</li><li>优化：界面显示效果</li><li>更改：集成报错详解于选项、解锁工具界面、汉化bypass脚本</li></ol></li></ul><h2 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h2><ul><li>V1.6<ol><li>可以更换主题</li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> 刷机教程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Bat脚本教程</title>
      <link href="//p/Batch/index/"/>
      <url>//p/Batch/index/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 编程教程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>小米手机打开USB调试教程</title>
      <link href="//p/%E5%88%B7%E6%9C%BA/xiaomi_usb/"/>
      <url>//p/%E5%88%B7%E6%9C%BA/xiaomi_usb/</url>
      
        <content type="html"><![CDATA[<ul><li><h2 id="点我观看视频教程"><a href="#点我观看视频教程" class="headerlink" title="点我观看视频教程"></a><a href="https://www.bilibili.com/video/BV1TuiLezEYK/">点我观看视频教程</a></h2></li></ul><ol><li>第一步</li><li>第二步</li><li>第三步</li></ol>]]></content>
      
      
      <categories>
          
          <category> 玩机教程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>小米一键root</title>
      <link href="//p/roottool/index/"/>
      <url>//p/roottool/index/</url>
      
        <content type="html"><![CDATA[<ul><li><h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2></li><li><p><strong>更新版本信息:</strong></p><ul><li>V5.0.0_Beta (2024-11-08)</li></ul></li><li><p><strong>历史版本:</strong></p><ul><li>V4.2</li><li>优化Usb3.0补丁提示</li><li>智能检测工具使用状态，第二次使用直接返回主页</li><li>修改并添加注释</li><li>V4.1.5<ol><li>修复Usb3.0补丁返回和提示的bug</li><li>优化部分界面</li></ol></li><li>V4.1<ol><li>更改脚本标题</li><li>添加工具教程功能</li></ol></li><li>V4.0<ol><li>优化部分界面</li></ol></li><li>V4.0_Beta6<ol><li>优化界面及功能</li><li>精简工具目录</li></ol></li><li>V4.0_Beta5<ol><li>改版工具使用逻辑</li><li>添加捐赠功能</li><li>修补后的boot镜像命名为root.img</li><li>精简部分功能</li><li>优化usb3.0补丁脚本</li><li>添加一键安装Magisk.apk功能</li><li>精简工具目录</li><li>标明是否测试</li></ol></li><li>V3<ol><li>优化使用逻辑</li><li>添加查看更新日志功能</li><li>区分国家版本</li><li>添加机型代号</li><li>调整窗口长度与宽度</li><li>标明发布论坛</li></ol></li></ul></li><li><h1 id="适配更新日志"><a href="#适配更新日志" class="headerlink" title="适配更新日志:"></a>适配更新日志:</h1><ul><li><p>2023.03.31 K50U MIUI14.0.7</p></li><li><p>2023.03.29 K50U MIUI14.0.5</p></li><li><p>2023.03.26 K50U MIUI13.0.7</p></li><li><p>2023.03.06 K20Pro&#x2F;尊享版 MIUI12.5.6</p></li><li><p>2023.02.20 K50U MIUI13.0.4</p></li><li><p>2023.02.04 10U MIUI12.0.15</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 刷机教程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>远程刷机</title>
      <link href="//p/ycsj/index/"/>
      <url>//p/ycsj/index/</url>
      
        <content type="html"><![CDATA[<h2 id="远程软件-下载todesk"><a href="#远程软件-下载todesk" class="headerlink" title="远程软件:下载todesk"></a><strong>远程软件:<a href="https://www.todesk.com/download.html">下载todesk</a></strong></h2><h2 id="联系方式-微信-LACS177"><a href="#联系方式-微信-LACS177" class="headerlink" title="联系方式: 微信 LACS177"></a><strong>联系方式:</strong> 微信 LACS177</h2><h2 id="业务范围"><a href="#业务范围" class="headerlink" title="业务范围:"></a><strong>业务范围:</strong></h2><blockquote><p><strong>承接小米全系刷机Root，刷机升级降级，救砖</strong></p><p><strong>联发科秒解，澎湃解bl，线刷卡刷各种系统</strong></p></blockquote><ul><li><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项:"></a>注意事项:</h2></li><li><h3 id="售前相关"><a href="#售前相关" class="headerlink" title="售前相关"></a>售前相关</h3></li></ul><ol><li>仅提供刷机服务，我不是售后，没时间跟你浪费时间</li><li>先付款后刷机，别跟我提什么没钱过两天给你这些话</li><li>不成功全额退款，不接黑产类相关业务(改Imei，外挂相关)</li></ol><ul><li><h3 id="设备相关"><a href="#设备相关" class="headerlink" title="设备相关"></a>设备相关</h3></li></ul><ol><li>太卡的电脑收费会增加，（指延迟高，下载龟速，360全家桶）</li><li>老机型的收费标准跟新机型是一样的，有能力自己弄谢谢</li><li>需要你有一个良好的精神状态，能听懂人话，不然没法交流</li></ol><ul><li><h3 id="隐私相关"><a href="#隐私相关" class="headerlink" title="隐私相关"></a>隐私相关</h3></li></ul><ol><li>我承诺不会对刷机过程录屏、录像、拍照、直播</li><li>我承诺不会主动获取你的手机、电脑上的隐私信息和文件</li><li>我承诺发给你的文件都是没有病毒和木马等危险内容</li></ol><ul><li><h3 id="服务相关"><a href="#服务相关" class="headerlink" title="服务相关"></a>服务相关</h3></li></ul><ol><li>老用户会有折扣（9折以下）（折扣：QQ&#x2F;VX &gt;闲鱼）</li><li>刷完之后可以咨询不懂的问题（老板很友善）</li><li>不免费远程，非公益，混口饭吃，自己会自己弄。</li></ol><section class="flex flex-col flex-wrap min-w-full mt-4 sm:min-w-0"><!-- 开始一个新的节，使用flex布局，包含列和包裹，最小宽度为全屏，在小型设备上最小宽度为0 -->]]></content>
      
      
      <categories>
          
          <category> 刷机教程 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
